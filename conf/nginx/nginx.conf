user  nginx web;
#work进程，cpu个数*2
worker_processes  1;  

error_log   logs/error.log debug;
#error_log  logs/error.log crit;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

pid       run/nginx.pid;


events 
{
                #使用的网络I/O模型，Linux推荐使用epoll引擎                
                use epoll;
                #允许的连接数
                worker_connections  1024;
}


http 
{
                include       mime.types;
                default_type  application/octet-stream;
                
                #创建自定义名称为main的日志格式
                #$remote_addr(ip地址)、$remote_user(远程用户名)、$time_local(访问时间时区)、$request(请求URL与HTTP协议)
                #$status(状态码)、$body_bytes_sent(给客户端文件主体内容大小)、$http_referer(从哪个页面链接访问过来的)
                #$http_user_agent(客户端浏览器信息)、$http_x_forwarded_for(反向代理时仍可获取到客户端的真实ip地址)
                log_format  main    '$remote_addr - $remote_user [$time_local] "$request" '
                                    '$status $body_bytes_sent "$http_referer" '
                                    '"$http_user_agent" "$http_x_forwarded_for"';
                #根据域名把日志分开存储
                access_log  logs/$server_name.log  main;
                client_body_temp_path   tmp/client_body_temp 1 2;
                proxy_temp_path         tmp/proxy_temp 1 2;
                fastcgi_temp_path       tmp/fastcgi_temp 1 2;
                scgi_temp_path          tmp/scgi_temp 1 2;
                uwsgi_temp_path         tmp/uwsgi_temp 1 2;
                #使用缓存技术让包含变量日志插入速度更快
                
                open_log_file_cache max=1000 inactive=20s min_uses=2 valid=1m;

                server_names_hash_bucket_size 128;
                client_header_buffer_size 32k;
                large_client_header_buffers 4 32k;
                client_max_body_size 8m;

                sendfile        on;
                tcp_nopush     on;

                keepalive_timeout  60;

                tcp_nodelay on;

                fastcgi_connect_timeout 300s;
                fastcgi_send_timeout 300s;
                fastcgi_read_timeout 300s;
                fastcgi_buffer_size 128k;
                fastcgi_buffers 8 128k;
                fastcgi_busy_buffers_size 256k;
                fastcgi_temp_file_write_size 256k;
                fastcgi_intercept_errors on;
                
                #开启gzip压缩
                gzip  on;
                gzip_min_length  1k;
                gzip_buffers     4 16k;
                gzip_http_version 1.0;
                gzip_comp_level 2;
                gzip_types       text/plain application/x-javascript text/css application/xml;
                gzip_vary on;
                include vhost/vhost_*.conf;


      server {
        listen 80 default;
        index index.html;
        include common/error.conf;
        rewrite ^/(.*)$ http://www.baidu.com/$1 permanent;
    }    
}
